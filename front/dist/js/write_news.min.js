function WriteNews(){this.upload_img=$("#upload-img")}console.log("write_news"),WriteNews.prototype.run=function(){var e=this;e.listen_qiniu_upload(),e.initUEditor(),e.listen_submit_news()},WriteNews.prototype.listen_submit_news=function(){$("#submit_news").click(function(e){e.preventDefault();var t=$(this).attr("data-news-id"),i=$("input[name='title']").val(),n=$("select[name='category']").val(),o=$("input[name='describe']").val(),a=$("input[name='thumbnail']").val(),r=window.ue.getContent(),s="";s=t?"/cms/edit_news_list/":"/cms/write_news/",myajax.post({url:s,data:{title:i,category:n,describe:o,thumbnail:a,content:r,pk:t},success:function(e){200===e.code&&myalert.alertSuccess("上传新闻成功！",function(){window.location.reload()})}})})},WriteNews.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{serverUrl:"/ueditor/upload/",initialFrameHeight:400,initialFrameWidth:"100%"})},WriteNews.prototype.listen_img_btn=function(){var i=this;i.upload_img.change(function(){var e=i.upload_img[0].files[0],t=new FormData;t.append("file",e),myajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){console.log(e.data);var t=$("#thumbnail-form"),i=e.data.url;t.val(i)}}})})},WriteNews.prototype.listen_qiniu_upload=function(){var r=this;r.upload_img.change(function(){var a=this.files[0];myajax.post({url:"/cms/qiniu_token/",success:function(e){if(200===e.code){var t=e.data.token,i=(new Date).getTime()+"."+a.name.split(".")[1],n={useCdnDomain:!0,retryCount:5,region:qiniu.region.z2},o={fname:i,parames:{},mineType:["image/png","image/jpeg","image/gif"]};qiniu.upload(a,i,t,o,n).subscribe({next:r.next_fun,error:r.error_fun,complete:r.complete_fun})}}})})},WriteNews.prototype.next_fun=function(e){var t=e.total,i=t.percent,n=t.loaded,o=i.toFixed(2)+"%";$("#process-upload").show();var a=$(".progress-bar");a.css({width:o}),a.text(o),console.log(n)},WriteNews.prototype.error_fun=function(e){window.messageBox.showError(e),console.log(e.message)},WriteNews.prototype.complete_fun=function(e){console.log(e);var t=$("#thumbnail-form"),i=$("#process-upload"),n=$(".progress-bar");i.hide(),n.css("width","0"),n.text("0%"),t.val("http://pmc6nd88y.bkt.clouddn.com/"+e.key)},$(function(){(new WriteNews).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
